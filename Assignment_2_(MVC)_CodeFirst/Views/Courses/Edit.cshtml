@model Assignment_2__MVC__CodeFirst.ViewModels.CourseViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Course</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SchoolId, "School", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SchoolId, Model.Schools as SelectList, "Select School", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TrainerId, "Trainer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TrainerId, Model.Trainers as SelectList, "Select Trainer", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TrainerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Students, "Students", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <table>
                @foreach (var s in Model.MyStudents)
                {
                    <tr>
                        <td>@Html.DisplayFor(model => s.FullName)&emsp;</td>
                        <td>
                            @Html.ActionLink("Details", "Details", "Students", new { id = s.ID }, null) | 
                            <div onclick="removeStudentFromCourse(@Model.ID, @s.ID);" style="float: right;"><a>Remove</a></div>
                            <script type="text/javascript">
                                function removeStudentFromCourse(courseId, studentId) {
                                    bootbox.confirm("Are you sure you want to delete?", function (result) {
                                        if (result) {
                                            $.ajax({
                                                type: "POST",
                                                url: "../../api/Courses/RemoveStudent",
                                                contentType: "application/json; charset=utf-8",
                                                dataType: "json",
                                                data: JSON.stringify(
                                                    {
                                                        "studentId": studentId,
                                                        "courseId": courseId
                                                    }
                                                )
                                            }).done(function (data) {
                                                location.reload();
                                            }).fail(function (error) {
                                                console.log(`Error: ${error}`);
                                            });
                                        }
                                    });
                                };
                            </script>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>

    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.SelectedStudents, "Add Students", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.SelectedStudents, Model.Students, new { @class = "form-control", @id = "selectedStudentsList" })
            @Html.ValidationMessageFor(model => model.SelectedStudents, "", new { @class = "text-danger" })
            <div onclick="AddStudentToCourse(@Model.ID);" style="float: right;"><a>Add</a></div>
        </div>
        <script type="text/javascript">
            function AddStudentToCourse(courseId) {
                var students = [];
                var listBox = $("#selectedStudentsList")[0];
                for (var i = 0; i < listBox.options.length; i++) {
                    if (listBox.options[i].selected) {
                        var text = listBox.options[i].innerHTML;
                        var value = listBox.options[i].value;
                        students.push(
                            {
                                "courseId": courseId,
                                "studentId": value
                            }
                        );
                    }
                }
                $.ajax({
                    type: "POST",
                    url: "../../api/Courses/AddStudents",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(students)
                }).done(function (data) {
                    location.reload();
                }).fail(function (error) {
                    console.log(`Error: ${error}`);
                });
                
            };
        </script>
    </div>

    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back", "Details", "Schools", new { Id = @Model.SchoolId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
