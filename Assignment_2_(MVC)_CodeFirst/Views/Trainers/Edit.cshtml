@model Assignment_2__MVC__CodeFirst.ViewModels.TrainerViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Trainer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SchoolId, "School", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SchoolId, new SelectList(Assignment_2__MVC__CodeFirst.Static.Globals.schoolRepo.GetAll(), "ID", "Name") as SelectList, "Select School", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Courses, "Courses", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <table>
                <tr>
                    <th></th>
                    <th></th>
                </tr>
                @foreach (var c in Model.MyCourses)
                {
                    <tr>
                        <td>@Html.DisplayFor(model => c.Title)&emsp;</td>
                        <td>
                            @Html.ActionLink("Details", "Details", "Courses", new { id = c.ID }, null) |
                            <div onclick="removeCourseFromTrainer(@Model.ID, @c.ID);" style="float: right;"><a>Remove</a></div>
                            <script type="text/javascript">
                                function removeCourseFromTrainer(trainerId, courseId) {
                                    bootbox.confirm("Are you sure you want to delete?", function (result) {
                                        if (result) {
                                            $.ajax({
                                                type: "POST",
                                                url: "/api/Trainers/RemoveCourse",
                                                data: JSON.stringify(
                                                    {
                                                        "trainerId": trainerId,
                                                        "courseId": courseId
                                                    }
                                                ),
                                                contentType: "application/json; charset=utf-8",
                                                dataType: "json",
                                                success: function (response) {
                                                    if (response != null) {
                                                        location.reload();
                                                    } else {
                                                        console.log(response);
                                                    }
                                                },
                                                failure: function (response) {
                                                    console.log(response);
                                                },
                                                error: function (response) {
                                                    console.log(response);
                                                }
                                            });
                                        }
                                    }
                                };
                            </script>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>

    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.SelectedCourses, "Add Courses", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.SelectedCourses, Model.Courses, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SelectedCourses, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Schools")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
